library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_unsigned.ALL;

entity zam_top is
    Port ( mclk : in  STD_LOGIC;
           sw0 : in  STD_LOGIC;
           seg : out  STD_LOGIC_VECTOR (7 downto 0);
           btn : in  STD_LOGIC_VECTOR (3 downto 0);
           led0 : out  STD_LOGIC;
           led1 : out  STD_LOGIC);
end zam_top;

architecture Behavioral of zam_top is

signal button : STD_LOGIC_VECTOR (3 downto 0);
signal ce1 : STD_LOGIC;

begin

	Inst_puls: entity puls PORT MAP(
		clk => mclk,
		pulse => ce1
	);
	
	Inst_debouncer: entity debouncer PORT MAP(
		clk => mclk,
		ce => ce1,
		btn_in => btn(0),
		btn_posedge => button(0)
	);
	
	Inst_debouncer1: entity debouncer PORT MAP(
		clk => mclk,
		ce => ce1,
		btn_in => btn(1),
		btn_posedge => button(1)
	);
	
	Inst_debouncer2: entity debouncer PORT MAP(
		clk => mclk,
		ce => ce1,
		btn_in => btn(2),
		btn_posedge => button(2)
	);
	
	Inst_debouncer3: entity debouncer PORT MAP(
		clk => mclk,
		ce => ce1,
		btn_in => btn(3),
		btn_posedge => button(3)
	);
	
	Inst_zam: entity zam PORT MAP(
		clk => mclk,
		ce => ce1,
		reset => sw0,
		error => led0,
		cislo => button,
		zamek => led1
	);

end Behavioral;

